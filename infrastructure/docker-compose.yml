version: '3.8'

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack:3.0
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # External services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3,dynamodb,lambda,apigateway,iam,sts
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOVE_CONTAINERS=true
      - PERSISTENCE=1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./setup-localstack.sh:/etc/localstack/init/ready.d/setup-localstack.sh"
    networks:
      - localstack-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  image-service:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    container_name: image-service
    ports:
      - "8000:8000"
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - S3_BUCKET_NAME=instagram-images-dev
      - DYNAMODB_TABLE_NAME=ImageMetadata-dev
      - PYTHONPATH=/app
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
      - ../requirements.txt:/app/requirements.txt
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - localstack-net
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

networks:
  localstack-net:
    driver: bridge